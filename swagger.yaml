openapi: 3.0.0
info:
  title: Books API
  version: "1.0.0"
  description: A simple API for managing books
components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Book:
      type: object
      required:
        - title
        - author
        - finished
      properties:
        id:
          type: int
          description: The auto-generated id of the book
        title:
          type: string
          description: The title of your book
        author:
          type: string
          description: The book author
        finished:
          type: boolean
          description: Whether you have finished reading the book
        createdAt:
          type: string
          format: date
          description: The date the book was added
      example:
        id: 1
        title: Caue Maldonado e o Prisioneiro de Azkabam
        author: Hudson Borges
        finished: true
        createdAt: 2020-03-10T04:05:06.157Z
security:
  - auth: []
tags:
  - name: Books
    description: The books managing API
paths:
  /books:
    get:
      summary: Lists all the books
      tags:
        - Books
      responses:
        200:
          description: The list of the books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Create a new book
      tags:
        - Books
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        201:
          description: The created book.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        500:
          description: Some server error
  /books/{id}:
    get:
      summary: Get the book by id
      tags:
        - Books
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The book id
      responses:
        200:
          description: The book response by id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        404:
          description: The book was not found
    put:
      summary: Update the book by id
      tags:
        - Books
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The book id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        200:
          description: The book was updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        404:
          description: The book was not found
        500:
          description: Some error happened
    delete:
      summary: Remove the book by id
      tags:
        - Books
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The book id
      responses:
        204:
          description: The book was deleted
        404:
          description: The book was not found
